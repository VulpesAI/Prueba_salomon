# Minimal environment for deploying core-api on Firebase App Hosting in minimal mode.
# Copy to `.env` and replace placeholder values.

# Core runtime configuration
NODE_ENV=production
PORT=8080
STRICT_ENV=false

# JWT signing secret required even in minimal mode.
JWT_SECRET=replace_with_a_secure_random_string

# CORS configuration: list every allowed origin separated by commas.
# Include the App Hosting domain and any other frontends consuming the API.
ALLOWED_ORIGINS=https://your-apphosting-domain.web.app,https://prueba-salomon.vercel.app

# Firebase credentials (minimal set when not using FIREBASE_SERVICE_ACCOUNT_KEY).
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_CLIENT_EMAIL=firebase-adminsdk@example.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\\nYOUR_PRIVATE_KEY\\n-----END PRIVATE KEY-----\\n"

# Optional: provide the full service account JSON instead of individual FIREBASE_* keys.
# FIREBASE_SERVICE_ACCOUNT_KEY='{"project_id":"..."}'

# Optional toggles â€” leave commented until the dependency is provisioned.
# Enable strict mode (requires Postgres & other backends):
# STRICT_ENV=true
# POSTGRES_HOST=
# POSTGRES_PORT=5432
# POSTGRES_USER=
# POSTGRES_PASSWORD=
# POSTGRES_DB=

# Activate Kafka event streaming by setting the broker URL.
# KAFKA_BROKER=

# Turn on vector search and ML features by pointing to a Qdrant instance.
# QDRANT_URL=

# Enable recommendation engine integration.
# RECOMMENDATION_ENGINE_URL=

# Enable financial forecasting (requires the forecasting engine service).
# FORECASTING_ENGINE_URL=

# Allow uploads & document processing by configuring a shared volume path.
# UPLOADS_PATH=

# Send outbound security logs to an external SIEM.
# SIEM_ENDPOINT=
# SIEM_TOKEN=

# Enforce HTTPS directly from the service by enabling TLS support.
# ENABLE_TLS=true
# TLS_CERT_PEM=
# TLS_KEY_PEM=
# TLS_CERT_PEM_CIPHERTEXT=
# TLS_KEY_PEM_CIPHERTEXT=
# KMS_ENDPOINT=
# KMS_API_KEY=
